plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id "com.google.protobuf" version "0.8.8"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.vtears'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0'
    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'io.grpc:grpc-netty-shaded:1.19.0'
    implementation 'io.grpc:grpc-protobuf:1.19.0'
    implementation 'io.grpc:grpc-stub:1.19.0'
    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'

}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
//            srcDir 'src/main/protobuf'
//            srcDir 'src/main/protocolbuffers'
            srcDir 'src/main/proto'
            // In addition to the default '**/*.proto' (use with caution).
            // Using an extension other than 'proto' is NOT recommended,
            // because when proto files are published along with class files, we can
            // only tell the type of a file from its extension.
//            include '**/*.protodevel'
            include '**/*.proto'
        }
        java {
            srcDirs 'generated/source/proto/main/grpc'
            srcDirs 'generated/source/proto/main/java'
        }
    }
}

protobuf {
    generatedFilesBaseDir = "$projectDir/generated/source/proto"
    protoc {
        artifact = "com.google.protobuf:protoc:3.6.1"
    }
    plugins {
        // Locate a plugin with name 'grpc'. This step is optional.
        // If you don't locate it, protoc will try to use "protoc-gen-grpc" from
        // system search path.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.19.0'
        }
    }
    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all()*.plugins {
            grpc {}
        }
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}

